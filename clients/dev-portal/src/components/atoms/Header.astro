---
interface Props {
  activeLink?: string;
}

const { activeLink = "home" } = Astro.props;

const navLinks = [
  { href: "/", label: "Home", id: "home" },
  { href: "/documentation", label: "Documentation", id: "docs" },
  { href: "/tools", label: "Tools", id: "tools" },
  { href: "/resources", label: "Resources", id: "resources" },
];
---

<header class="bg-white shadow-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex">
        <div class="flex-shrink-0 flex items-center">
          <a href="/" class="flex items-center">
            <span class="text-primary-500 font-bold text-xl">Marriott Dev Portal</span>
          </a>
        </div>
        <nav class="hidden sm:ml-6 sm:flex sm:space-x-8">
          {
            navLinks.map((link) => (
              <a
                href={link.href}
                class={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${
                  activeLink === link.id
                    ? "border-primary-500 text-gray-900"
                    : "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700"
                }`}
              >
                {link.label}
              </a>
            ))
          }
        </nav>
      </div>
      <div class="hidden sm:ml-6 sm:flex sm:items-center">
        <button
          type="button"
          class="bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        >
          <span class="sr-only">Search</span>
          <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
            />
          </svg>
        </button>
      </div>
      <div class="-mr-2 flex items-center sm:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            class="block h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu, show/hide based on menu state. -->
  <div class="sm:hidden hidden mobile-menu">
    <div class="pt-2 pb-3 space-y-1">
      {
        navLinks.map((link) => (
          <a
            href={link.href}
            class={`block pl-3 pr-4 py-2 border-l-4 text-base font-medium ${
              activeLink === link.id
                ? "bg-primary-50 border-primary-500 text-primary-700"
                : "border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700"
            }`}
          >
            {link.label}
          </a>
        ))
      }
    </div>
  </div>
</header>

<script>
  // Toggle mobile menu
  const mobileMenuButton = document.querySelector('.mobile-menu-button');
  const mobileMenu = document.querySelector('.mobile-menu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }
</script>
